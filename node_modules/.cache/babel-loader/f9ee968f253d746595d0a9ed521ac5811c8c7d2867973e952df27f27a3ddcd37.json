{"ast":null,"code":"//   import React from \"react\";\n// import Aside from \"../Sidebars.js/Aside\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import { useState, useEffect } from \"react\";\n// import StatusDropdown from \"../MiniComponents.js/StatusDropdown\";\n// import PriorityDropdown from \"../MiniComponents.js/PriorityDropdown\";\n// import axios from \"axios\";\n// import EditTask from \"../MiniComponents.js/Modals/EditTask\";\n// const Tasks = () => {\n//   const [selected1stDate, setSelected1stDate] = useState(null);\n//   const [selected2ndDate, setSelected2ndDate] = useState(null);\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [taskdata, setProjectdata] = useState([]);\n//   const [isEditModalOpen, setEditModalOpen] = useState(false);\n//   const [selectedTask, setSelectedTask] = useState(null);\n//   const [tasks, setTasks] = useState([]);\n//   const swal = require(\"sweetalert2\");\n//   useEffect(() => {\n//     fetchtasks();\n//   }, []);\n//   const fetchtasks = async () => {\n//     try {\n//       const response = await fetch(\"http://127.0.0.1:8080/api/task/\");\n//       if (!response.ok) {\n//         throw new Error(\"Failed to fetch users\");\n//       }\n//       const data = await response.json();\n//       setProjectdata(data); // Set the retrieved users in state\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       // Handle error if needed\n//     }\n//   };\n//   const toggleDropdown = () => {\n//     setIsOpen(!isOpen);\n//   };\n//   const deleteTask = async (taskId) => {\n//     try {\n//       await axios.delete(`http://127.0.0.1:8080/api/task/${taskId}/`);\n//       // Remove the deleted group from the state\n//       setProjectdata(taskdata.filter((task) => task.id !== taskId));\n//       swal.fire({\n//         title: \"Task deleted successfully\",\n//         icon: \"success\",\n//         toast: true,\n//         timer: 3000,\n//         position: \"top-right\",\n//         timerProgressBar: true,\n//         showConfirmButton: false,\n//       });\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//     }\n//   };\n//   const updateTask = (updatedTask) => {\n//     const updatedTasks = tasks.map((task) =>\n//       task.id === updatedTask.id ? updatedTask : task\n//     );\n//     setTasks(updatedTasks);\n//   };\n//   const handleEditClick = (task) => {\n//     setSelectedTask(task);\n//     setEditModalOpen(true);\n//   };\n//   return (\n//     <>\n//       <Aside />\n//       <div class=\"p-4 sm:ml-64 \">\n//         <div class=\"p-4 border-2 border-gray-200 border-dashed rounded-lg dark:border-gray-700\">\n//           <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg pb-60\">\n//             <div class=\"pb-4 bg-white dark:bg-gray-900\">\n//               <label for=\"table-search\" class=\"sr-only\">\n//                 Search\n//               </label>\n//               <div class=\"relative mt-1\">\n//                 <div class=\"absolute inset-y-0 rtl:inset-r-0 start-0 flex items-center ps-3 pointer-events-none\">\n//                   <svg\n//                     class=\"w-4 h-4 text-gray-500 dark:text-gray-400\"\n//                     aria-hidden=\"true\"\n//                     xmlns=\"http://www.w3.org/2000/svg\"\n//                     fill=\"none\"\n//                     viewBox=\"0 0 20 20\"\n//                   >\n//                     <path\n//                       stroke=\"currentColor\"\n//                       stroke-linecap=\"round\"\n//                       stroke-linejoin=\"round\"\n//                       stroke-width=\"2\"\n//                       d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"\n//                     />\n//                   </svg>\n//                 </div>\n//                 <input\n//                   type=\"text\"\n//                   id=\"table-search\"\n//                   class=\"block pt-2 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n//                   placeholder=\"Search for items\"\n//                 />\n//               </div>\n//             </div>\n//             <table class=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\n//               <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n//                 <tr>\n//                   <th scope=\"col\" class=\"p-4\">\n//                     <div class=\"flex items-center\">\n//                       <input\n//                         id=\"checkbox-all-search\"\n//                         type=\"checkbox\"\n//                         class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n//                       />\n//                       <label for=\"checkbox-all-search\" class=\"sr-only\">\n//                         checkbox\n//                       </label>\n//                     </div>\n//                   </th>\n//                   <th scope=\"col\" class=\"px-6 py-3\">\n//                     Task Name\n//                   </th>\n//                   {/* <th scope=\"col\" class=\"px-6 py-3\">\n//                     Project Name\n//                   </th> */}\n//                   <th scope=\"col\" class=\"px-6 py-3\">\n//                     Status\n//                   </th>\n//                   <th scope=\"col\" class=\"px-6 py-3\">\n//                     Due Date\n//                   </th>\n//                   <th scope=\"col\" class=\"px-6 py-3\">\n//                     Description\n//                   </th>\n//                   <th scope=\"col\" class=\"px-6 py-3\">\n//                     Priority\n//                   </th>\n//                   <th scope=\"col\" class=\"px-6 py-3\">\n//                     Actions\n//                   </th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {taskdata.map((task) => (\n//                   <tr\n//                     key={task.id}\n//                     value={task.id}\n//                     class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\n//                   >\n//                     <td class=\"w-4 p-4\">\n//                       <div class=\"flex items-center\">\n//                         <input\n//                           id=\"checkbox-table-search-1\"\n//                           type=\"checkbox\"\n//                           class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n//                         />\n//                         <label for=\"checkbox-table-search-1\" class=\"sr-only\">\n//                           checkbox\n//                         </label>\n//                       </div>\n//                     </td>\n//                     <th\n//                       scope=\"row\"\n//                       class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\n//                     >\n//                       {task.task_name}\n//                     </th>\n//                     {/* <td class=\"px-6 py-4\">{task.project_username}</td> */}\n//                     <td class=\"px-6 py-4\">\n//                       <StatusDropdown />\n//                     </td>\n//                     <td class=\"px-6 py-4\">\n//                       {task.start_date} - {task.start_date}\n//                     </td>\n//                     <td class=\"px-6 py-4\">{task.description}</td>\n//                     <td class=\"px-6 py-4\">\n//                       <PriorityDropdown />\n//                     </td>\n//                     <td className=\"px-6 py-4\">\n//                       <button\n//                         type=\"button\"\n//                         class=\"text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2\"\n//                         onClick={() => handleEditClick(task)}\n//                       >\n//                         EDIT\n//                       </button>\n//                       <button\n//                         type=\"button\"\n//                         class=\"text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2\"\n//                         onClick={() => deleteTask(task.id)}\n//                       >\n//                         DELETE\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//         {isEditModalOpen && (\n//           <EditTask\n//             closemodal={setEditModalOpen}\n//             task={selectedTask}\n//             updateTask={updateTask}\n//           />\n//         )}\n//       </div>\n//     </>\n//   );\n// };\n// export default Tasks;","map":{"version":3,"names":[],"sources":["C:/Users/User/Documents/Work/TaskFlowWeb/src/components/ContentSidebars/Tasks.js"],"sourcesContent":["//   import React from \"react\";\r\n// import Aside from \"../Sidebars.js/Aside\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n// import { useState, useEffect } from \"react\";\r\n// import StatusDropdown from \"../MiniComponents.js/StatusDropdown\";\r\n// import PriorityDropdown from \"../MiniComponents.js/PriorityDropdown\";\r\n// import axios from \"axios\";\r\n// import EditTask from \"../MiniComponents.js/Modals/EditTask\";\r\n\r\n// const Tasks = () => {\r\n//   const [selected1stDate, setSelected1stDate] = useState(null);\r\n//   const [selected2ndDate, setSelected2ndDate] = useState(null);\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const [taskdata, setProjectdata] = useState([]);\r\n//   const [isEditModalOpen, setEditModalOpen] = useState(false);\r\n//   const [selectedTask, setSelectedTask] = useState(null);\r\n//   const [tasks, setTasks] = useState([]);\r\n\r\n//   const swal = require(\"sweetalert2\");\r\n\r\n//   useEffect(() => {\r\n//     fetchtasks();\r\n//   }, []);\r\n\r\n//   const fetchtasks = async () => {\r\n//     try {\r\n//       const response = await fetch(\"http://127.0.0.1:8080/api/task/\");\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Failed to fetch users\");\r\n//       }\r\n//       const data = await response.json();\r\n//       setProjectdata(data); // Set the retrieved users in state\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       // Handle error if needed\r\n//     }\r\n//   };\r\n//   const toggleDropdown = () => {\r\n//     setIsOpen(!isOpen);\r\n//   };\r\n//   const deleteTask = async (taskId) => {\r\n//     try {\r\n//       await axios.delete(`http://127.0.0.1:8080/api/task/${taskId}/`);\r\n//       // Remove the deleted group from the state\r\n//       setProjectdata(taskdata.filter((task) => task.id !== taskId));\r\n//       swal.fire({\r\n//         title: \"Task deleted successfully\",\r\n//         icon: \"success\",\r\n//         toast: true,\r\n//         timer: 3000,\r\n//         position: \"top-right\",\r\n//         timerProgressBar: true,\r\n//         showConfirmButton: false,\r\n//       });\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//     }\r\n//   };\r\n//   const updateTask = (updatedTask) => {\r\n//     const updatedTasks = tasks.map((task) =>\r\n//       task.id === updatedTask.id ? updatedTask : task\r\n//     );\r\n//     setTasks(updatedTasks);\r\n//   };\r\n//   const handleEditClick = (task) => {\r\n//     setSelectedTask(task);\r\n//     setEditModalOpen(true);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Aside />\r\n//       <div class=\"p-4 sm:ml-64 \">\r\n//         <div class=\"p-4 border-2 border-gray-200 border-dashed rounded-lg dark:border-gray-700\">\r\n//           <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg pb-60\">\r\n//             <div class=\"pb-4 bg-white dark:bg-gray-900\">\r\n//               <label for=\"table-search\" class=\"sr-only\">\r\n//                 Search\r\n//               </label>\r\n//               <div class=\"relative mt-1\">\r\n//                 <div class=\"absolute inset-y-0 rtl:inset-r-0 start-0 flex items-center ps-3 pointer-events-none\">\r\n//                   <svg\r\n//                     class=\"w-4 h-4 text-gray-500 dark:text-gray-400\"\r\n//                     aria-hidden=\"true\"\r\n//                     xmlns=\"http://www.w3.org/2000/svg\"\r\n//                     fill=\"none\"\r\n//                     viewBox=\"0 0 20 20\"\r\n//                   >\r\n//                     <path\r\n//                       stroke=\"currentColor\"\r\n//                       stroke-linecap=\"round\"\r\n//                       stroke-linejoin=\"round\"\r\n//                       stroke-width=\"2\"\r\n//                       d=\"m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z\"\r\n//                     />\r\n//                   </svg>\r\n//                 </div>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   id=\"table-search\"\r\n//                   class=\"block pt-2 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg w-80 bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n//                   placeholder=\"Search for items\"\r\n//                 />\r\n//               </div>\r\n//             </div>\r\n//             <table class=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\r\n//               <thead class=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n//                 <tr>\r\n//                   <th scope=\"col\" class=\"p-4\">\r\n//                     <div class=\"flex items-center\">\r\n//                       <input\r\n//                         id=\"checkbox-all-search\"\r\n//                         type=\"checkbox\"\r\n//                         class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n//                       />\r\n//                       <label for=\"checkbox-all-search\" class=\"sr-only\">\r\n//                         checkbox\r\n//                       </label>\r\n//                     </div>\r\n//                   </th>\r\n//                   <th scope=\"col\" class=\"px-6 py-3\">\r\n//                     Task Name\r\n//                   </th>\r\n//                   {/* <th scope=\"col\" class=\"px-6 py-3\">\r\n//                     Project Name\r\n//                   </th> */}\r\n//                   <th scope=\"col\" class=\"px-6 py-3\">\r\n//                     Status\r\n//                   </th>\r\n//                   <th scope=\"col\" class=\"px-6 py-3\">\r\n//                     Due Date\r\n//                   </th>\r\n//                   <th scope=\"col\" class=\"px-6 py-3\">\r\n//                     Description\r\n//                   </th>\r\n//                   <th scope=\"col\" class=\"px-6 py-3\">\r\n//                     Priority\r\n//                   </th>\r\n//                   <th scope=\"col\" class=\"px-6 py-3\">\r\n//                     Actions\r\n//                   </th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {taskdata.map((task) => (\r\n//                   <tr\r\n//                     key={task.id}\r\n//                     value={task.id}\r\n//                     class=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600\"\r\n//                   >\r\n//                     <td class=\"w-4 p-4\">\r\n//                       <div class=\"flex items-center\">\r\n//                         <input\r\n//                           id=\"checkbox-table-search-1\"\r\n//                           type=\"checkbox\"\r\n//                           class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n//                         />\r\n//                         <label for=\"checkbox-table-search-1\" class=\"sr-only\">\r\n//                           checkbox\r\n//                         </label>\r\n//                       </div>\r\n//                     </td>\r\n//                     <th\r\n//                       scope=\"row\"\r\n//                       class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\r\n//                     >\r\n//                       {task.task_name}\r\n//                     </th>\r\n//                     {/* <td class=\"px-6 py-4\">{task.project_username}</td> */}\r\n//                     <td class=\"px-6 py-4\">\r\n//                       <StatusDropdown />\r\n//                     </td>\r\n//                     <td class=\"px-6 py-4\">\r\n//                       {task.start_date} - {task.start_date}\r\n//                     </td>\r\n//                     <td class=\"px-6 py-4\">{task.description}</td>\r\n//                     <td class=\"px-6 py-4\">\r\n//                       <PriorityDropdown />\r\n//                     </td>\r\n//                     <td className=\"px-6 py-4\">\r\n//                       <button\r\n//                         type=\"button\"\r\n//                         class=\"text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2\"\r\n//                         onClick={() => handleEditClick(task)}\r\n//                       >\r\n//                         EDIT\r\n//                       </button>\r\n//                       <button\r\n//                         type=\"button\"\r\n//                         class=\"text-white bg-gradient-to-r from-red-400 via-red-500 to-red-600 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2\"\r\n//                         onClick={() => deleteTask(task.id)}\r\n//                       >\r\n//                         DELETE\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </div>\r\n//         {isEditModalOpen && (\r\n//           <EditTask\r\n//             closemodal={setEditModalOpen}\r\n//             task={selectedTask}\r\n//             updateTask={updateTask}\r\n//           />\r\n//         )}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Tasks;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}