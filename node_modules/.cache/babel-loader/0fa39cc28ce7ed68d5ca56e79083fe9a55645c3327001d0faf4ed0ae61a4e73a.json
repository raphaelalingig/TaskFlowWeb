{"ast":null,"code":"'use client';\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useListItem, useMergeRefs } from '@floating-ui/react';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { ButtonBase } from '../Button/ButtonBase';\nimport { useDropdownContext } from './DropdownContext';\nexport const DropdownItem = forwardRef((_ref, forwardedRef) => {\n  let {\n    children,\n    className,\n    icon: Icon,\n    onClick,\n    theme: customTheme = {},\n    ...props\n  } = _ref;\n  const {\n    ref: listItemRef,\n    index\n  } = useListItem({\n    label: typeof children === 'string' ? children : undefined\n  });\n  const ref = useMergeRefs([forwardedRef, listItemRef]);\n  const {\n    theme: rootTheme,\n    activeIndex,\n    dismissOnClick,\n    getItemProps,\n    handleSelect\n  } = useDropdownContext();\n  const isActive = activeIndex === index;\n  const theme = mergeDeep(rootTheme.floating.item, customTheme);\n  const theirProps = props;\n  return _jsx(\"li\", {\n    role: \"menuitem\",\n    className: theme.container,\n    children: _jsxs(ButtonBase, {\n      ref: ref,\n      className: twMerge(theme.base, className),\n      ...theirProps,\n      ...getItemProps({\n        onClick: () => {\n          onClick && onClick();\n          dismissOnClick && handleSelect(null);\n        }\n      }),\n      tabIndex: isActive ? 0 : -1,\n      children: [Icon && _jsx(Icon, {\n        className: theme.icon\n      }), children]\n    })\n  });\n});\nDropdownItem.displayName = 'DropdownItem';","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","useListItem","useMergeRefs","forwardRef","twMerge","mergeDeep","ButtonBase","useDropdownContext","DropdownItem","_ref","forwardedRef","children","className","icon","Icon","onClick","theme","customTheme","props","ref","listItemRef","index","label","undefined","rootTheme","activeIndex","dismissOnClick","getItemProps","handleSelect","isActive","floating","item","theirProps","role","container","base","tabIndex","displayName"],"sources":["C:/Users/User/Documents/Work/TaskFlowWeb/node_modules/flowbite-react/lib/esm/components/Dropdown/DropdownItem.js"],"sourcesContent":["'use client';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useListItem, useMergeRefs } from '@floating-ui/react';\nimport { forwardRef } from 'react';\nimport { twMerge } from 'tailwind-merge';\nimport { mergeDeep } from '../../helpers/merge-deep';\nimport { ButtonBase } from '../Button/ButtonBase';\nimport { useDropdownContext } from './DropdownContext';\nexport const DropdownItem = forwardRef(({ children, className, icon: Icon, onClick, theme: customTheme = {}, ...props }, forwardedRef) => {\n    const { ref: listItemRef, index } = useListItem({ label: typeof children === 'string' ? children : undefined });\n    const ref = useMergeRefs([forwardedRef, listItemRef]);\n    const { theme: rootTheme, activeIndex, dismissOnClick, getItemProps, handleSelect } = useDropdownContext();\n    const isActive = activeIndex === index;\n    const theme = mergeDeep(rootTheme.floating.item, customTheme);\n    const theirProps = props;\n    return (_jsx(\"li\", { role: \"menuitem\", className: theme.container, children: _jsxs(ButtonBase, { ref: ref, className: twMerge(theme.base, className), ...theirProps, ...getItemProps({\n                onClick: () => {\n                    onClick && onClick();\n                    dismissOnClick && handleSelect(null);\n                },\n            }), tabIndex: isActive ? 0 : -1, children: [Icon && _jsx(Icon, { className: theme.icon }), children] }) }));\n});\nDropdownItem.displayName = 'DropdownItem';\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,IAAIC,IAAI,EAAEC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AAC9D,SAASC,WAAW,EAAEC,YAAY,QAAQ,oBAAoB;AAC9D,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,OAAO,MAAMC,YAAY,GAAGL,UAAU,CAAC,CAAAM,IAAA,EAAkFC,YAAY,KAAK;EAAA,IAAlG;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,IAAI,EAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;IAAE,GAAGC;EAAM,CAAC,GAAAT,IAAA;EACnH,MAAM;IAAEU,GAAG,EAAEC,WAAW;IAAEC;EAAM,CAAC,GAAGpB,WAAW,CAAC;IAAEqB,KAAK,EAAE,OAAOX,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGY;EAAU,CAAC,CAAC;EAC/G,MAAMJ,GAAG,GAAGjB,YAAY,CAAC,CAACQ,YAAY,EAAEU,WAAW,CAAC,CAAC;EACrD,MAAM;IAAEJ,KAAK,EAAEQ,SAAS;IAAEC,WAAW;IAAEC,cAAc;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGrB,kBAAkB,CAAC,CAAC;EAC1G,MAAMsB,QAAQ,GAAGJ,WAAW,KAAKJ,KAAK;EACtC,MAAML,KAAK,GAAGX,SAAS,CAACmB,SAAS,CAACM,QAAQ,CAACC,IAAI,EAAEd,WAAW,CAAC;EAC7D,MAAMe,UAAU,GAAGd,KAAK;EACxB,OAAQpB,IAAI,CAAC,IAAI,EAAE;IAAEmC,IAAI,EAAE,UAAU;IAAErB,SAAS,EAAEI,KAAK,CAACkB,SAAS;IAAEvB,QAAQ,EAAEX,KAAK,CAACM,UAAU,EAAE;MAAEa,GAAG,EAAEA,GAAG;MAAEP,SAAS,EAAER,OAAO,CAACY,KAAK,CAACmB,IAAI,EAAEvB,SAAS,CAAC;MAAE,GAAGoB,UAAU;MAAE,GAAGL,YAAY,CAAC;QACzKZ,OAAO,EAAEA,CAAA,KAAM;UACXA,OAAO,IAAIA,OAAO,CAAC,CAAC;UACpBW,cAAc,IAAIE,YAAY,CAAC,IAAI,CAAC;QACxC;MACJ,CAAC,CAAC;MAAEQ,QAAQ,EAAEP,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;MAAElB,QAAQ,EAAE,CAACG,IAAI,IAAIhB,IAAI,CAACgB,IAAI,EAAE;QAAEF,SAAS,EAAEI,KAAK,CAACH;MAAK,CAAC,CAAC,EAAEF,QAAQ;IAAE,CAAC;EAAE,CAAC,CAAC;AACtH,CAAC,CAAC;AACFH,YAAY,CAAC6B,WAAW,GAAG,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}